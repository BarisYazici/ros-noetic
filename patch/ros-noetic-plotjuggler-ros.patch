diff --git a/plugins/RosoutPublisher/logs_table_model.hpp b/plugins/RosoutPublisher/logs_table_model.hpp
index 459718d..aba6f5d 100644
--- a/plugins/RosoutPublisher/logs_table_model.hpp
+++ b/plugins/RosoutPublisher/logs_table_model.hpp
@@ -10,6 +10,11 @@
 #include <unordered_map>
 #include <chrono>
 
+
+#ifdef _WIN32
+#undef ERROR
+#endif
+
 typedef std::chrono::high_resolution_clock::time_point TimePoint;
 
 
diff --git a/plugins/ros1_introspection/include/ros_type_introspection/details/conversion_impl.hpp b/plugins/ros1_introspection/include/ros_type_introspection/details/conversion_impl.hpp
index b3d20ff..feff40a 100644
--- a/plugins/ros1_introspection/include/ros_type_introspection/details/conversion_impl.hpp
+++ b/plugins/ros1_introspection/include/ros_type_introspection/details/conversion_impl.hpp
@@ -196,7 +196,7 @@ inline void checkLowerLimit(const From& from)
 template <typename From, typename To>
 inline void checkTruncation(const From& from)
 {
-  if (!std::isnan(from) && from != static_cast<From>(static_cast<To>(from)))
+  if (!std::isnan(static_cast<double>(from)) && from != static_cast<From>(static_cast<To>(from)))
   {
     throw RangeException("Floating point truncated 1");
   }
diff --git a/plugins/ros1_parsers/ros1_parser.cpp b/plugins/ros1_parsers/ros1_parser.cpp
index d1b6eca..1ba07a7 100644
--- a/plugins/ros1_parsers/ros1_parser.cpp
+++ b/plugins/ros1_parsers/ros1_parser.cpp
@@ -64,7 +64,7 @@ bool IntrospectionParser::parseMessage(MessageRef serialized_msg, double timesta
 
     auto& series = getSeries(key);
 
-    if (!std::isnan(value) && !std::isinf(value))
+    if (!std::isnan(static_cast<double>(value)) && !std::isinf(value))
     {
       series.pushBack({ timestamp, value });
     }

